{"ast":null,"code":"var _jsxFileName = \"/Users/shakumar16/Desktop/Training/reactRedux/src/AsynRoute.js\";\nimport React from 'react';\n\nclass AsyncRoute extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loaded: false\n    };\n  }\n\n  componentDidMount() {\n    this.props.loadingPromise.then(module => {\n      this.component = module.default;\n      this.setState({\n        loaded: true\n      });\n    });\n  }\n\n  render() {\n    if (this.state.loaded) {\n      return React.createElement(this.component, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, 'loader');\n  }\n\n}\n\nexport default AsyncRoute;","map":{"version":3,"sources":["/Users/shakumar16/Desktop/Training/reactRedux/src/AsynRoute.js"],"names":["React","AsyncRoute","Component","state","loaded","componentDidMount","props","loadingPromise","then","module","component","default","setState","render"],"mappings":";AAEA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,UAAN,SAAyBD,KAAK,CAACE,SAA/B,CAAyC;AAAA;AAAA;AAAA,SACvCC,KADuC,GAC/B;AACNC,MAAAA,MAAM,EAAE;AADF,KAD+B;AAAA;;AAIvCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWC,cAAX,CAA0BC,IAA1B,CAA+BC,MAAM,IAAI;AACvC,WAAKC,SAAL,GAAiBD,MAAM,CAACE,OAAxB;AACA,WAAKC,QAAL,CAAc;AAAER,QAAAA,MAAM,EAAE;AAAV,OAAd;AACD,KAHD;AAID;;AAEDS,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKV,KAAL,CAAWC,MAAf,EAAuB;AACrB,aAAO,yBAAM,SAAN,oBAAoB,KAAKE,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;;AACL,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,QAAL,CAAP;AACG;;AAhBsC;;AAmBzC,eAAeL,UAAf","sourcesContent":["// @flow\n\nimport React from 'react';\n\n\nclass AsyncRoute extends React.Component {\n  state = {\n    loaded: false\n  };\n  componentDidMount() {\n    this.props.loadingPromise.then(module => {\n      this.component = module.default;\n      this.setState({ loaded: true });\n    });\n  }\n  \n  render() {\n    if (this.state.loaded) {\n      return <this.component {...this.props} />;\n    }\nreturn <h1>{'loader'}</h1>;\n  }\n}\n\nexport default AsyncRoute;\n"]},"metadata":{},"sourceType":"module"}