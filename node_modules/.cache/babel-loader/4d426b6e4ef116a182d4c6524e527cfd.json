{"ast":null,"code":"var _jsxFileName = \"/Users/shakumar16/Desktop/Training/reactRedux/src/containers/CharacterList/CharactersList.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { getCharacter, getFilterLIst } from './selector';\nimport { loadCharacterList } from './action';\nimport { removeCheckboxFilter } from '../Filters/action';\nimport Layout from '../common/Layout'; // import icons from 'glyphicons'\n\nclass CharactersList extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    fetch(\"https://rickandmortyapi.com/api/character/\").then(response => response.json()).then(data => {\n      this.props.loadList(data);\n    }).catch(error => this.setState({\n      error,\n      isLoading: false\n    }));\n  }\n\n  render() {\n    return React.createElement(Layout, Object.assign({}, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    loadList: data => {\n      dispatch(loadCharacterList(data));\n    },\n    removeFiterItem: data => {\n      dispatch(removeCheckboxFilter(data));\n    }\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    character: getCharacter(state),\n    filters: getFilterLIst(state)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CharactersList);","map":{"version":3,"sources":["/Users/shakumar16/Desktop/Training/reactRedux/src/containers/CharacterList/CharactersList.jsx"],"names":["React","connect","getCharacter","getFilterLIst","loadCharacterList","removeCheckboxFilter","Layout","CharactersList","PureComponent","constructor","props","state","componentDidMount","fetch","then","response","json","data","loadList","catch","error","setState","isLoading","render","mapDispatchToProps","dispatch","ownProps","removeFiterItem","mapStateToProps","character","filters"],"mappings":";AAAA,OAAOA,KAAP,MAAiB,OAAjB;AACA,SAAQC,OAAR,QAAuB,aAAvB;AACA,SAAQC,YAAR,EAAqBC,aAArB,QAAyC,YAAzC;AACA,SAAQC,iBAAR,QAAgC,UAAhC;AACA,SAAQC,oBAAR,QAAmC,mBAAnC;AAEA,OAAOC,MAAP,MAAmB,kBAAnB,C,CAEA;;AAEA,MAAMC,cAAN,SAA6BP,KAAK,CAACQ,aAAnC,CAAiD;AAC/CC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW,EAAX;AAED;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,8CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAG;AACT,WAAKP,KAAL,CAAWQ,QAAX,CAAoBD,IAApB;AACH,KAJD,EAMCE,KAND,CAMOC,KAAK,IAAI,KAAKC,QAAL,CAAc;AAAED,MAAAA,KAAF;AAASE,MAAAA,SAAS,EAAE;AAApB,KAAd,CANhB;AAOH;;AAECC,EAAAA,MAAM,GAAE;AACN,WAAO,oBAAC,MAAD,oBAAY,KAAKb,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AAEG;;AApB0C;;AAyBjD,MAAMc,kBAAkB,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACjD,SAAO;AACLR,IAAAA,QAAQ,EAAGD,IAAD,IAAU;AAChBQ,MAAAA,QAAQ,CAACrB,iBAAiB,CAACa,IAAD,CAAlB,CAAR;AACH,KAHI;AAILU,IAAAA,eAAe,EAAEV,IAAD,IAAQ;AACtBQ,MAAAA,QAAQ,CAACpB,oBAAoB,CAACY,IAAD,CAArB,CAAR;AACD;AANI,GAAP;AAQD,CATD;;AAUA,MAAMW,eAAe,GAAGjB,KAAK,IAAI;AAC/B,SAAO;AACNkB,IAAAA,SAAS,EAAC3B,YAAY,CAACS,KAAD,CADhB;AAENmB,IAAAA,OAAO,EAAC3B,aAAa,CAACQ,KAAD;AAFf,GAAP;AAID,CALD;;AAQA,eAAeV,OAAO,CAAC2B,eAAD,EAAiBJ,kBAAjB,CAAP,CAA4CjB,cAA5C,CAAf","sourcesContent":["import React from'react';\nimport {connect } from 'react-redux'\nimport {getCharacter,getFilterLIst} from './selector'\nimport {loadCharacterList} from './action'\nimport {removeCheckboxFilter} from '../Filters/action'\n\nimport Layout from '../common/Layout';\n\n// import icons from 'glyphicons'\n\nclass CharactersList extends React.PureComponent {\n  constructor(props){\n    super(props)\n    this.state={\n    }\n  }\n\n  componentDidMount() {\n    fetch(`https://rickandmortyapi.com/api/character/`)\n    .then(response => response.json())\n    .then(data =>{\n        this.props.loadList(data);      \n    }\n    )\n    .catch(error => this.setState({ error, isLoading: false }));\n}\n\n  render(){\n    return <Layout {...this.props} />\n          \n      }\n    \n  \n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    loadList: (data) => {\n        dispatch(loadCharacterList(data))\n    },\n    removeFiterItem:(data)=>{\n      dispatch(removeCheckboxFilter(data))\n    }\n  }\n}\nconst mapStateToProps = state => {\n  return {\n   character:getCharacter(state),\n   filters:getFilterLIst(state)\n  }\n}\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(CharactersList)\n\n "]},"metadata":{},"sourceType":"module"}