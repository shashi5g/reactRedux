{"ast":null,"code":"var _jsxFileName = \"/Users/shakumar16/Desktop/Training/reactRedux/src/server/middleware/render.js\";\nimport escapeStringRegexp from 'escape-string-regexp';\nimport { ServerStyleSheet } from 'styled-components';\nimport React from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport serialize from 'serialize-javascript';\nimport { StaticRouter } from 'react-router-dom';\nimport App from '../../App';\n\nconst renderMiddleware = () => (req, res) => {\n  let html = req.html;\n  const store = req.store;\n  const sheet = new ServerStyleSheet();\n  const routerContext = {};\n  const htmlContent = ReactDOMServer.renderToString(React.createElement(ReduxProvider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(StaticRouter, {\n    location: req.url,\n    context: routerContext,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(App, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }))));\n  const htmlReplacements = {\n    PRELOADED_STATE: serialize(store.getState(), {\n      isJSON: true\n    }),\n    STYLE_TAGS: sheet.getStyleTags(),\n    HTML_CONTENT: htmlContent\n  };\n  Object.keys(htmlReplacements).forEach(key => {\n    const value = htmlReplacements[key];\n    console.log(value);\n    html = html.replace(new RegExp('__' + escapeStringRegexp(key) + '__', 'g'), value);\n  });\n\n  if (routerContext.url) {\n    res.header('Cache-Control', 'no-cache, no-store, must-revalidate');\n    res.header('Pragma', 'no-cache');\n    res.header('Expires', 0);\n    res.redirect(302, routerContext.url);\n  } else {\n    res.send(html);\n  }\n};\n\nexport default renderMiddleware;","map":null,"metadata":{},"sourceType":"module"}