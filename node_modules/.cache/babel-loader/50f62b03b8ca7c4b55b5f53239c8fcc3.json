{"ast":null,"code":"var _jsxFileName = \"/Users/shakumar16/Desktop/Training/reactRedux/src/containers/Search/Search.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { loadCharacterList } from '../CharacterList/action';\nimport { getCharacter, getFilterLIst } from '../CharacterList/selector';\nimport Layout from '../common/Layout';\nimport { removeCheckboxFilter } from '../Filters/action'; // import icons from 'glyphicons'\n\nclass Search extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    renderDate();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props !== nextProps) {\n      renderDate();\n    }\n  }\n\n  renderDate() {\n    const url = \"https://rickandmortyapi.com/api/character/\";\n    const modifyUrl = this.props.props.selectedShow ? \"\".concat(url, \"?name=\").concat(this.props.props.selectedShow) : url;\n    axios.get(modifyUrl).then(response => {\n      this.props.sendData(response.data);\n    }).catch(error => {\n      console.error('axios error', error); // eslint-disable-line no-console\n    });\n  }\n\n  render() {\n    return React.createElement(Layout, Object.assign({}, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    sendData(data) {\n      dispatch(loadCharacterList(data));\n    },\n\n    loadList: data => {\n      dispatch(loadCharacterList(data));\n    },\n    removeFiterItem: data => {\n      dispatch(removeCheckboxFilter(data));\n    }\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    character: getCharacter(state),\n    filters: getFilterLIst(state)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);","map":{"version":3,"sources":["/Users/shakumar16/Desktop/Training/reactRedux/src/containers/Search/Search.jsx"],"names":["React","connect","axios","loadCharacterList","getCharacter","getFilterLIst","Layout","removeCheckboxFilter","Search","PureComponent","constructor","props","state","componentDidMount","renderDate","componentWillReceiveProps","nextProps","url","modifyUrl","selectedShow","get","then","response","sendData","data","catch","error","console","render","mapDispatchToProps","dispatch","ownProps","loadList","removeFiterItem","mapStateToProps","character","filters"],"mappings":";AAAA,OAAOA,KAAP,MAAiB,OAAjB;AACA,SAAQC,OAAR,QAAuB,aAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,iBAAR,QAAgC,yBAAhC;AACA,SAAQC,YAAR,EAAqBC,aAArB,QAAyC,2BAAzC;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAAQC,oBAAR,QAAmC,mBAAnC,C,CACA;;AAEA,MAAMC,MAAN,SAAqBR,KAAK,CAACS,aAA3B,CAAyC;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW,EAAX;AAED;;AACFC,EAAAA,iBAAiB,GAAE;AAClBC,IAAAA,UAAU;AACV;;AACDC,EAAAA,yBAAyB,CAACC,SAAD,EAAW;AAClC,QAAG,KAAKL,KAAL,KAAaK,SAAhB,EAA0B;AACzBF,MAAAA,UAAU;AACV;AAEF;;AAEAA,EAAAA,UAAU,GAAE;AACV,UAAMG,GAAG,+CAAT;AACA,UAAMC,SAAS,GAAG,KAAKP,KAAL,CAAWA,KAAX,CAAiBQ,YAAjB,aAAmCF,GAAnC,mBAA+C,KAAKN,KAAL,CAAWA,KAAX,CAAiBQ,YAAhE,IAA+EF,GAAjG;AAEEf,IAAAA,KAAK,CAACkB,GAAN,CAAUF,SAAV,EAAqBG,IAArB,CAA0BC,QAAQ,IAAI;AACnC,WAAKX,KAAL,CAAWY,QAAX,CAAoBD,QAAQ,CAACE,IAA7B;AACA,KAFH,EAEKC,KAFL,CAEWC,KAAK,IAAI;AAChBC,MAAAA,OAAO,CAACD,KAAR,CAAc,aAAd,EAA6BA,KAA7B,EADgB,CACqB;AACtC,KAJH;AAKH;;AAEDE,EAAAA,MAAM,GAAE;AACN,WAAO,oBAAC,MAAD,oBAAa,KAAKjB,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD;;AA7BsC;;AAkCzC,MAAMkB,kBAAkB,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACjD,SAAO;AACLR,IAAAA,QAAQ,CAACC,IAAD,EAAO;AACbM,MAAAA,QAAQ,CAAC3B,iBAAiB,CAACqB,IAAD,CAAlB,CAAR;AACD,KAHI;;AAKLQ,IAAAA,QAAQ,EAAGR,IAAD,IAAU;AAChBM,MAAAA,QAAQ,CAAC3B,iBAAiB,CAACqB,IAAD,CAAlB,CAAR;AACH,KAPI;AASLS,IAAAA,eAAe,EAAET,IAAD,IAAQ;AACtBM,MAAAA,QAAQ,CAACvB,oBAAoB,CAACiB,IAAD,CAArB,CAAR;AACD;AAXI,GAAP;AAcD,CAfD;;AAgBA,MAAMU,eAAe,GAAGtB,KAAK,IAAI;AAC/B,SAAO;AACNuB,IAAAA,SAAS,EAAC/B,YAAY,CAACQ,KAAD,CADhB;AAENwB,IAAAA,OAAO,EAAC/B,aAAa,CAACO,KAAD;AAFf,GAAP;AAKD,CAND;;AASA,eAAeX,OAAO,CAACiC,eAAD,EAAiBL,kBAAjB,CAAP,CAA4CrB,MAA5C,CAAf","sourcesContent":["import React from'react';\nimport {connect } from 'react-redux'\nimport axios from 'axios';\nimport {loadCharacterList} from '../CharacterList/action'\nimport {getCharacter,getFilterLIst} from '../CharacterList/selector'\nimport Layout from '../common/Layout';\nimport {removeCheckboxFilter} from '../Filters/action'\n// import icons from 'glyphicons'\n\nclass Search extends React.PureComponent {\n  constructor(props){\n    super(props)\n    this.state={\n    }\n  }\n componentDidMount(){\n  renderDate()\n }\n componentWillReceiveProps(nextProps){\n   if(this.props!==nextProps){\n    renderDate()\n   }\n\n }\n\n  renderDate(){\n    const url =`https://rickandmortyapi.com/api/character/`;\n    const modifyUrl = this.props.props.selectedShow ? `${url}?name=${this.props.props.selectedShow}`:url;\n  \n      axios.get(modifyUrl).then(response => {\n         this.props.sendData(response.data)\n        }).catch(error => {\n          console.error('axios error', error); // eslint-disable-line no-console\n        });\n  }\n\n  render(){\n    return <Layout  {...this.props}/>\n  }\n    \n  \n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    sendData(data) {\n      dispatch(loadCharacterList(data))\n    },\n   \n    loadList: (data) => {\n        dispatch(loadCharacterList(data))\n    }\n    ,\n    removeFiterItem:(data)=>{\n      dispatch(removeCheckboxFilter(data))\n    }\n    \n  }\n}\nconst mapStateToProps = state => {\n  return {\n   character:getCharacter(state),\n   filters:getFilterLIst(state)\n\n  }\n}\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Search)\n\n "]},"metadata":{},"sourceType":"module"}