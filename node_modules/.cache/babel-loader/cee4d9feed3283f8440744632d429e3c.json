{"ast":null,"code":"var _jsxFileName = \"/Users/shakumar16/Desktop/Training/reactRedux/src/containers/CharacterList/CharactersList.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { getCharacter, getFilterLIst } from './selector';\nimport { loadCharacterList } from './action';\nimport { removeCheckboxFilter } from '../Filters/action';\nimport Layout from '../common/Layout'; // import icons from 'glyphicons'\n\nclass CharactersList extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    fetch(\"https://rickandmortyapi.com/api/character/\").then(response => response.json()).then(data => {\n      this.props.loadList(data);\n    }).catch(error => this.setState({\n      error,\n      isLoading: false\n    }));\n  }\n\n  render() {\n    return React.createElement(Layout, Object.assign({}, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    loadList: data => {\n      dispatch(loadCharacterList(data));\n    },\n    removeFiterItem: data => {\n      dispatch(removeCheckboxFilter(data));\n    }\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    character: getCharacter(state),\n    filters: getFilterLIst(state)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CharactersList);","map":null,"metadata":{},"sourceType":"module"}